@inherits LayoutComponentBase

@using System.Text.Json
@using System.Text.Json.Serialization

@using Zonit.Extensions.Cultures.Repositories
@using Zonit.Extensions.Cultures
@using Zonit.Extensions.Identity
@using Zonit.Extensions.Website.Abstractions.Navigations.Types

@using Data

@inject NavigationManager NavigationManager
@* @inject AuthenticationStateProvider AuthenticationStateProvider *@

@inject IJSRuntime JSRuntime
@inject ICultureProvider Culture
@inject ICultureManager CultureRepository
@inject ICookieProvider Cookie
@inject IAuthenticatedProvider Authenticated

<MudThemeProvider Theme="MyCustomTheme" @ref="@_mudThemeProvider" IsDarkMode="_isDarkMode" />  @* @bind-IsDarkMode="@_isDarkMode" *@
<MudDialogProvider FullWidth="true" Position="DialogPosition.Center" MaxWidth="MaxWidth.ExtraSmall" CloseOnEscapeKey="true" />
<MudPopoverProvider />
<MudSnackbarProvider />

@* <AuthorizeView>
    <Authorized Context="user"> *@

<MudRTLProvider RightToLeft="RightToLeft">
    <MudLayout>

        <Navbar MudThemeProvider=@_mudThemeProvider @bind-DrawerOpen=@_drawerOpen @bind-DrawerRightOpen=@_drawerRightOpen @bind-DarkMode=@_isDarkMode Width="@_width" Hegith="@_height" />

        <MudSwipeArea OnSwipeEnd="@OnSwipe" Style="width: 100%;">
            <MudDrawer @bind-Open="_drawerOpen" Variant="_drawerVariant" OpenMiniOnHover="_drawerOpenMin" Anchor="Anchor.Start" Elevation="2">
                <MudDrawerHeader>
                    <a Href="/">
                        <MudText Typo="Typo.h5" Class="mt-1">@settingsProvider.Settings.Title</MudText>
                    </a>
                </MudDrawerHeader>
                <MudNavMenu Bordered="true">
                    <Nav AreaType="AreaType" />
                    <MudDivider Class="my-2" />
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Row="true" Spacing="8" Class="pa-2 pb-4" Style="fill: var(--mud-palette-text-secondary)">
                        <a href="/Discord" target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" style="fill: var(--mud-palette-text-secondary)" height="16" width="20" viewBox="0 0 640 512"><path d="M524.5 69.8a1.5 1.5 0 0 0 -.8-.7A485.1 485.1 0 0 0 404.1 32a1.8 1.8 0 0 0 -1.9 .9 337.5 337.5 0 0 0 -14.9 30.6 447.8 447.8 0 0 0 -134.4 0 309.5 309.5 0 0 0 -15.1-30.6 1.9 1.9 0 0 0 -1.9-.9A483.7 483.7 0 0 0 116.1 69.1a1.7 1.7 0 0 0 -.8 .7C39.1 183.7 18.2 294.7 28.4 404.4a2 2 0 0 0 .8 1.4A487.7 487.7 0 0 0 176 479.9a1.9 1.9 0 0 0 2.1-.7A348.2 348.2 0 0 0 208.1 430.4a1.9 1.9 0 0 0 -1-2.6 321.2 321.2 0 0 1 -45.9-21.9 1.9 1.9 0 0 1 -.2-3.1c3.1-2.3 6.2-4.7 9.1-7.1a1.8 1.8 0 0 1 1.9-.3c96.2 43.9 200.4 43.9 295.5 0a1.8 1.8 0 0 1 1.9 .2c2.9 2.4 6 4.9 9.1 7.2a1.9 1.9 0 0 1 -.2 3.1 301.4 301.4 0 0 1 -45.9 21.8 1.9 1.9 0 0 0 -1 2.6 391.1 391.1 0 0 0 30 48.8 1.9 1.9 0 0 0 2.1 .7A486 486 0 0 0 610.7 405.7a1.9 1.9 0 0 0 .8-1.4C623.7 277.6 590.9 167.5 524.5 69.8zM222.5 337.6c-29 0-52.8-26.6-52.8-59.2S193.1 219.1 222.5 219.1c29.7 0 53.3 26.8 52.8 59.2C275.3 311 251.9 337.6 222.5 337.6zm195.4 0c-29 0-52.8-26.6-52.8-59.2S388.4 219.1 417.9 219.1c29.7 0 53.3 26.8 52.8 59.2C470.7 311 447.5 337.6 417.9 337.6z" /></svg>
                        </a>
                        <a href="/Facebook" target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" style="fill: var(--mud-palette-text-secondary)" height="16" width="14" viewBox="0 0 448 512"><path d="M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64h98.2V334.2H109.4V256h52.8V222.3c0-87.1 39.4-127.5 125-127.5c16.2 0 44.2 3.2 55.7 6.4V172c-6-.6-16.5-1-29.6-1c-42 0-58.2 15.9-58.2 57.2V256h83.6l-14.4 78.2H255V480H384c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z" /></svg>
                        </a>
                        <a href="/Linkedin"  target="_blank">
                            <svg xmlns="http://www.w3.org/2000/svg" style="fill: var(--mud-palette-text-secondary)" height="16" width="14" viewBox="0 0 448 512"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z" /></svg>
                        </a>
                    </MudStack>
                </MudNavMenu>
            </MudDrawer>

            <MudDrawer @bind-Open="_drawerRightOpen" Anchor="Anchor.End"  Elevation="2" >
                <MudNavMenu Bordered="true">
                    @if(Authenticated.User is not null)
                    {
                        <MudText Align="Align.Center" Class="my-5">
                            <MudAvatar Color="Color.Primary" Size="Size.Large">@Authenticated.User.Name[0]</MudAvatar>
                        </MudText>
                        <MudText Align="Align.Center" Class="my-5">
                            <MudMenu AnchorOrigin="Origin.BottomCenter" EndIcon="@Icons.Material.Filled.KeyboardArrowDown" IconColor="Color.Secondary">
                                <ActivatorContent>
                                    <MudButton Class="mud-typography mud-typography-body2 px-4 mud-text-secondary" EndIcon="@Icons.Material.Filled.KeyboardArrowDown">@Culture.Translate("Hello {0}", Authenticated.User.Name)</MudButton>
                                </ActivatorContent>
                                <ChildContent>
                                    <MudMenuItem><a href="/Identity/Auth/Logout">Logout</a></MudMenuItem>
                                </ChildContent>
                            </MudMenu>
                        </MudText>

                        <MudDivider Class="my-2" />
                    }

                    <Zonit.Services.Dashboard.Areas.Dashboard.Components.ChangeOrganization />
                    <Zonit.Services.Dashboard.Areas.Dashboard.Components.ChangeProjects />
                    <Zonit.Services.Dashboard.Areas.Dashboard.Components.ChangeCulture />

                    <Nav AreaType="AreaType" Position="right" />

                    <MudDivider Class="my-2" />

@*                     <AuthorizeView Policy="AllowManagement">
                        <MudTooltip Text="Management" Arrow="true" Placement="Placement.Bottom">
                            <MudIconButton Href="/Management" Icon="@Icons.Material.Rounded.Dashboard" Color="Color.Inherit" />
                        </MudTooltip>
                    </AuthorizeView> *@

                </MudNavMenu>
            </MudDrawer>

            <MudMainContent>
                <div style="min-height: 100vh; margin-top: 20px; margin-bottom: 20px;" data-clarity-unmask="true">
                    @Body
                </div>
            </MudMainContent>

        </MudSwipeArea>

    </MudLayout>
</MudRTLProvider>
@*     </Authorized>

    <NotAuthorized>
        Zaloguj się...
    </NotAuthorized>
</AuthorizeView> *@


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    MudTheme MyCustomTheme = new()
    {
        PaletteLight = new()
        {
            AppbarBackground = "#ffffff",
            AppbarText = "#65676b",
            Background = "#f0f2f5",
            DrawerBackground = "#fdfdfd",
            Surface = "#ffffff",
            TextPrimary = "#050505",

        },
        PaletteDark = new()
        {
            AppbarBackground = "#242526",
            AppbarText = "#b0b3b8",
            Background = "#18191a",
            DrawerBackground = "#212223",
            Surface = "#242526",
            TextPrimary = "#E4E6EB"
        },

        // LayoutProperties = new LayoutProperties()
        // {
        //     DrawerWidthLeft = "260px",
        //     DrawerWidthRight = "300px"
        // }
    };

    bool _drawerOpen = true;
    bool _drawerOpenMin = false;
    DrawerVariant _drawerVariant = DrawerVariant.Responsive;
    bool _drawerRightOpen = true;
    bool _isDarkMode = false;
    MudThemeProvider _mudThemeProvider = null!;

    bool RightToLeft = false;

    public void Dispose()
        => Culture.OnChange -= StateHasChanged;

    public void OnSwipe(SwipeEventArgs args)
    {
        if (args.SwipeDirection == SwipeDirection.LeftToRight && !_drawerOpen)
        {
            _drawerOpen = true;
            StateHasChanged();
        }
        else if (args.SwipeDirection == SwipeDirection.RightToLeft && _drawerOpen)
        {
            _drawerOpen = false;
            StateHasChanged();
        }
    }
}